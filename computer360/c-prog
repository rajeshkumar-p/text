1) c programming language
- getting into c language
- working the c development cycle
- obtaining and configuring ID
- simple "Hello World Program"
- code compilation and program execution procedure
- exploring preprocessor
- understanding hearder files and libraries

2) variables and operators
- understanding c language data types
- using constants
- declaring variables 
- working with variables
- understanding variable scope
- making new variables
- using typedef with structures
- specifying characters and strings
- specifying integers and real numbers
- typecasting variable
- working with math operators
- using assignment operator
- obeying the order of precedence
- working with relational operator
- using logical operators
- understanding bitwise operators
- shifting bits
- exploring unary operators
- using the ternary operator
- working with switch-case structure
- creating a for loop
- setting up a while loop
- nesting loop
- breaking out of a loop
- avoiding to the goto keyword 
 
https://www.geeksforgeeks.org/data-types-in-c/
https://www.geeksforgeeks.org/bool-in-c/

3) arrays

4) c program compilation - behind the scenes

5) decision making and operators

6) control statements - I

7) control statements - II

8) functions I
- undertstanding functions
- prototyping a function
- returning a value from function
- passing arguments to a function
- retaining values in a function
- creating recursive function

https://www.geeksforgeeks.org/functions-in-c/

9) storage class

10) functions II

11) structures I

12) structures II

13) struct hack, member alignment, padding and data packing
https://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/

14) union
https://www.geeksforgeeks.org/union-c/
https://www.geeksforgeeks.org/difference-structure-union-c/
https://www.geeksforgeeks.org/g-fact-38-anonymous-union-and-structure/ 

15) string handling I 

16) string handling II

17) pointers and references I
https://www.geeksforgeeks.org/double-pointer-pointer-pointer-c/

18) pointers II - null, void, dangling and memoryleak
https://www.geeksforgeeks.org/void-pointer-c-cpp/
https://www.geeksforgeeks.org/dangling-void-null-wild-pointers/
https://stackoverflow.com/questions/20967868/should-the-compiler-warn-on-pointer-arithmetic-with-a-void-pointer
https://www.geeksforgeeks.org/what-are-wild-pointers-how-can-we-avoid/ 

19) pointers and arrays
https://www.geeksforgeeks.org/pointer-vs-array-in-c/
https://www.geeksforgeeks.org/difference-pointer-array-c/

10) pointers and structures

21) pointers and functions

21) memory management I
    malloc, calloc, realloc, free

22) memory management II
    * memory leak and how to address it    

23) macros and preprocessors I

24) macros and preprocessors I

25) bitwise operators in c

Interview questions :
https://www.geeksforgeeks.org/commonly-asked-c-programming-interview-questions-set-1/
https://www.geeksforgeeks.org/commonly-asked-c-programming-interview-questions-set-2/
https://www.geeksforgeeks.org/commonly-asked-c-programming-interview-questions-set-3/
 
operators
https://www.geeksforgeeks.org/can-use-operator-floating-point-numbers/
https://www.geeksforgeeks.org/sizeof-operator-c/
https://www.geeksforgeeks.org/g-fact-9/
https://www.geeksforgeeks.org/anything-written-sizeof-never-executed-c/
 
